import { useState } from 'react'
import axios from 'axios'
import './Contacts.css'
import Reveal from '../components/Reveal'
import Editable from '../components/Editable'
import { useSEO } from '../hooks/useSEO'
import StructuredData, { ContactPageData, BreadcrumbData } from '../components/StructuredData'

export default function Contacts() {
  // SEO –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
  useSEO({
    title: '–ö–æ–Ω—Ç–∞–∫—Ç—ã ‚Äî –û–û–û –ê–§–ö ¬´–£—Ä–∞–ª¬ª | –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞ –º–µ—Ç–∞–ª–ª–æ–æ–±—Ä–∞–±–æ—Ç–∫–∏',
    description: '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –û–û–û –ê–§–ö ¬´–£—Ä–∞–ª¬ª –¥–ª—è –∑–∞–∫–∞–∑–∞ —É—Å–ª—É–≥ –º–µ—Ç–∞–ª–ª–æ–æ–±—Ä–∞–±–æ—Ç–∫–∏. –õ–∞–∑–µ—Ä–Ω–∞—è —Ä–µ–∑–∫–∞, –≥–∏–±–∫–∞, —Å–≤–∞—Ä–∫–∞, –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ –≤ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–µ. –¢–µ–ª–µ—Ñ–æ–Ω, email, —Ñ–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.',
    keywords: '–∫–æ–Ω—Ç–∞–∫—Ç—ã, —Å–≤—è–∑–∞—Ç—å—Å—è, –∑–∞–∫–∞–∑, –º–µ—Ç–∞–ª–ª–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞, –ª–∞–∑–µ—Ä–Ω–∞—è —Ä–µ–∑–∫–∞, –≥–∏–±–∫–∞, —Å–≤–∞—Ä–∫–∞, –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ, –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥, –ê–§–ö –£—Ä–∞–ª, —Ç–µ–ª–µ—Ñ–æ–Ω, email',
    canonical: 'https://afk-ural.ru/contacts',
    ogImage: 'https://afk-ural.ru/src/assets/logo_afk.jpg'
  })

  const breadcrumbData = BreadcrumbData([
    { name: '–ì–ª–∞–≤–Ω–∞—è', url: 'https://afk-ural.ru/' },
    { name: '–ö–æ–Ω—Ç–∞–∫—Ç—ã', url: 'https://afk-ural.ru/contacts' }
  ])
  const [form, setForm] = useState({ full_name: '', phone: '', email: '', comment: '' })
  const [sending, setSending] = useState(false)
  const [success, setSuccess] = useState('')
  const [error, setError] = useState('')
  const [phoneError, setPhoneError] = useState('')

  // –ë–∞–∑–æ–≤—ã–π URL –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Vite
  if (!axios.defaults.baseURL) {
    let apiBaseUrl = import.meta.env.VITE_API_BASE_URL || 'https://afkural.ru/api'
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º HTTPS –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è Mixed Content
    if (apiBaseUrl.startsWith('http://')) {
      apiBaseUrl = apiBaseUrl.replace('http://', 'https://')
      console.log('üîÑ –ò–∑–º–µ–Ω–µ–Ω baseURL –Ω–∞ HTTPS:', apiBaseUrl)
    }
    
    axios.defaults.baseURL = apiBaseUrl
  }

  // –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  const validatePhone = (phone) => {
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
    const cleaned = phone.replace(/\D/g, '')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç: –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 8, –∑–∞—Ç–µ–º 10 —Ü–∏—Ñ—Ä
    const phoneRegex = /^8\d{10}$/
    
    if (!phoneRegex.test(cleaned)) {
      return '–¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 8 –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—å 10 —Ü–∏—Ñ—Ä –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ (–≤—Å–µ–≥–æ 11 —Ü–∏—Ñ—Ä)'
    }
    
    return ''
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  const formatPhone = (value) => {
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
    const cleaned = value.replace(/\D/g, '')
    
    // –ï—Å–ª–∏ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–µ —Å 8, –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ 8
    let processed = cleaned
    if (cleaned.length > 0 && !cleaned.startsWith('8')) {
      processed = '8' + cleaned.replace(/^8/, '').slice(0, 10)
    }
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä –ø–æ –º–∞—Å–∫–µ
    if (processed.length === 0) return ''
    if (processed.length === 1) return processed
    if (processed.length <= 4) return `8 (${processed.slice(1, 4)}`
    if (processed.length <= 7) return `8 (${processed.slice(1, 4)}) ${processed.slice(4, 7)}`
    if (processed.length <= 9) return `8 (${processed.slice(1, 4)}) ${processed.slice(4, 7)}-${processed.slice(7, 9)}`
    return `8 (${processed.slice(1, 4)}) ${processed.slice(4, 7)}-${processed.slice(7, 9)}-${processed.slice(9, 11)}`
  }

  const handlePhoneChange = (e) => {
    const formattedPhone = formatPhone(e.target.value)
    setForm({ ...form, phone: formattedPhone })
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    if (formattedPhone.trim() === '') {
      setPhoneError('')
    } else {
      setPhoneError(validatePhone(formattedPhone))
    }
  }

  const handleChange = (e) => {
    const { name, value } = e.target
    setForm({ ...form, [name]: value })

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    if (name === 'phone') {
      if (value.trim() === '') {
        setPhoneError('')
      } else {
        setPhoneError(validatePhone(value))
      }
    }
  }

  const handleSubmit = async (e) => {
    e.preventDefault()
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
    const phoneValidationError = validatePhone(form.phone)
    if (phoneValidationError) {
      setPhoneError(phoneValidationError)
      return
    }

    setSending(true)
    setSuccess('')
    setError('')
    setPhoneError('')

    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –Ω–∞ –±—ç–∫–µ–Ω–¥ (–±—ç–∫–µ–Ω–¥ —Å–∞–º –æ—Ç–ø—Ä–∞–≤–∏—Ç email –Ω–∞ office@afkural.ru)
      const response = await axios.post('/contact-requests/', form)
      
      setSuccess('–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.')
      setForm({ full_name: '', phone: '', email: '', comment: '' })
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏:', err)
      
      let errMsg = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.'
      
      if (err.response?.data) {
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ Django
        if (typeof err.response.data === 'object') {
          const errors = []
          for (const key in err.response.data) {
            if (Array.isArray(err.response.data[key])) {
              errors.push(...err.response.data[key])
            } else {
              errors.push(err.response.data[key])
            }
          }
          errMsg = errors.join(', ')
        } else if (typeof err.response.data === 'string') {
          errMsg = err.response.data
        } else if (err.response.data.detail) {
          errMsg = err.response.data.detail
        }
      } else if (err.request) {
        errMsg = '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.'
      }
      
      setError(errMsg)
    } finally {
      setSending(false)
    }
  }

  return (
    <>
      <StructuredData data={ContactPageData} />
      <StructuredData data={breadcrumbData} />
      <section className="contacts">
        <Reveal as="div" className="contacts-hero">
          <div className="container">
            <Editable 
              pageKey="contacts" 
              blockKey="title" 
              tag="h1" 
              className="contacts-title" 
              placeholder="–ö–æ–Ω—Ç–∞–∫—Ç—ã" 
            />
            <Editable 
              pageKey="contacts" 
              blockKey="subtitle" 
              tag="p" 
              className="contacts-subtitle" 
              placeholder="–ë—É–¥–µ–º —Ä–∞–¥—ã –æ–±—Å—É–¥–∏—Ç—å –≤–∞—à—É –∑–∞–¥–∞—á—É" 
            />
          </div>
        </Reveal>

        <div className="container">
          <div className="grid">
            <Reveal className="card info" y={18}>
              <Editable 
                pageKey="contacts" 
                blockKey="info_title" 
                tag="h2" 
                placeholder="–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏" 
              />
              <ul className="details">
                <li>
                  <strong>–ê–¥—Ä–µ—Å:</strong>{' '}
                  <Editable 
                    pageKey="contacts" 
                    blockKey="addr" 
                    tag="span" 
                    placeholder="–≥. –ß–µ–ª—è–±–∏–Ω—Å–∫, —É–ª. –°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è, 3" 
                  />
                </li>
                <li>
                  <strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong>{' '}
                  <a href="tel:+79823363480">
                    <Editable 
                      pageKey="contacts" 
                      blockKey="phone" 
                      tag="span" 
                      placeholder="+7 982 336 3480" 
                    />
                  </a>
                </li>
                <li>
                  <strong>Email:</strong>{' '}
                  <a href="mailto:office@afkural.ru">
                    <Editable 
                      pageKey="contacts" 
                      blockKey="email" 
                      tag="span" 
                      placeholder="office@afkural.ru" 
                    />
                  </a>
                </li>
                <li>
                  <strong>–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:</strong>{' '}
                  <Editable 
                    pageKey="contacts" 
                    blockKey="work_hours" 
                    tag="span" 
                    placeholder="–ü–Ω-–ü—Ç: 9:00-18:00" 
                  />
                </li>
              </ul>
            </Reveal>

            <Reveal className="card form-card" y={18}>
              <Editable 
                pageKey="contacts" 
                blockKey="form_title" 
                tag="h2" 
                placeholder="–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É" 
              />
              <Editable 
                pageKey="contacts" 
                blockKey="form_subtitle" 
                tag="p" 
                className="form-subtitle" 
                placeholder="–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç" 
              />
              
              <form onSubmit={handleSubmit} className="contact-form">
                <div className="row">
                  <div className="field">
                    <label htmlFor="full_name">
                      <Editable 
                        pageKey="contacts" 
                        blockKey="label_fullname" 
                        tag="span" 
                        placeholder="–§–ò–û *" 
                      />
                    </label>
                    <input 
                      id="full_name" 
                      name="full_name" 
                      value={form.full_name} 
                      onChange={handleChange} 
                      required 
                      disabled={sending}
                      placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á"
                    />
                  </div>
                  <div className="field">
                    <label htmlFor="phone">
                      <Editable 
                        pageKey="contacts" 
                        blockKey="label_phone" 
                        tag="span" 
                        placeholder="–¢–µ–ª–µ—Ñ–æ–Ω *" 
                      />
                    </label>
                    <input 
                      id="phone" 
                      name="phone" 
                      value={form.phone} 
                      onChange={handlePhoneChange} 
                      required 
                      disabled={sending} 
                      placeholder="8 900 000 00 00" 
                    />
                    {phoneError && <div className="field-error">{phoneError}</div>}
                  </div>
                </div>

                <div className="field">
                  <label htmlFor="email">
                    <Editable 
                      pageKey="contacts" 
                      blockKey="label_email" 
                      tag="span" 
                      placeholder="–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ *" 
                    />
                  </label>
                  <input 
                    id="email" 
                    type="email" 
                    name="email" 
                    value={form.email} 
                    onChange={handleChange} 
                    required 
                    disabled={sending} 
                    placeholder="example@mail.ru" 
                  />
                </div>

                <div className="field">
                  <label htmlFor="comment">
                    <Editable 
                      pageKey="contacts" 
                      blockKey="label_comment" 
                      tag="span" 
                      placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π" 
                    />
                  </label>
                  <textarea 
                    id="comment" 
                    name="comment" 
                    value={form.comment} 
                    onChange={handleChange} 
                    rows={4} 
                    disabled={sending} 
                    placeholder="–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞—á—É, –Ω–∞–ø—Ä–∏–º–µ—Ä: '–ù—É–∂–Ω–∞ –ª–∞–∑–µ—Ä–Ω–∞—è —Ä–µ–∑–∫–∞ –º–µ—Ç–∞–ª–ª–∞ —Ç–æ–ª—â–∏–Ω–æ–π 3 –º–º'"
                  />
                </div>

                <button 
                  type="submit" 
                  className={`btn ${sending ? 'btn-loading' : ''}`} 
                  disabled={sending || phoneError}
                >
                  {sending ? (
                    <>
                      <span className="spinner"></span>
                      –û—Ç–ø—Ä–∞–≤–∫–∞...
                    </>
                  ) : (
                    '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É'
                  )}
                </button>

                <p className="policy-note">
                  <Editable 
                    pageKey="contacts" 
                    blockKey="policy_text" 
                    tag="span" 
                    placeholder="–û—Ç–ø—Ä–∞–≤–ª—è—è –∑–∞—è–≤–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏" 
                  />
                  {' '}
                  <a href="/privacy" target="_blank" rel="noopener noreferrer">
                    <Editable 
                      pageKey="contacts" 
                      blockKey="policy_link" 
                      tag="span" 
                      placeholder="–ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏" 
                    />
                  </a>
                </p>

                {success && (
                  <div className="alert success">
                    <div className="alert-icon">‚úì</div>
                    <div className="alert-content">
                      <strong>–£—Å–ø–µ—à–Ω–æ!</strong>
                      <br />
                      {success}
                    </div>
                  </div>
                )}
                
                {error && (
                  <div className="alert error">
                    <div className="alert-icon">‚ö†</div>
                    <div className="alert-content">
                      <strong>–û—à–∏–±–∫–∞!</strong>
                      <br />
                      {error}
                    </div>
                  </div>
                )}
              </form>
            </Reveal>
          </div>
        </div>
      </section>
    </>
  )
}