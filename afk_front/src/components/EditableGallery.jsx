import { useEffect, useState } from 'react'
import axios from 'axios'
import { useAuth } from '../contexts/AuthContext'

export default function EditableGallery({ pageKey, blockKey = 'gallery' }) {
  const { isAuthenticated } = useAuth()
  const [items, setItems] = useState([])
  const [loading, setLoading] = useState(true)
  const [blockId, setBlockId] = useState(null)

  useEffect(() => {
    const load = async () => {
      try {
        setLoading(true)
        console.log('–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', pageKey)
        const resp = await axios.get(`/gallery-images/?page_key=${encodeURIComponent(pageKey)}`)
        console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', resp.data)
        
        const list = Array.isArray(resp.data) ? resp.data : (resp.data?.results || [])
        console.log('–ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', list.length)
        
        setItems(list.map(it => {
          let imageUrl = it.image?.startsWith('http') ? it.image : `${axios.defaults.baseURL?.replace('/api', '')}${it.image}`
          
          // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º HTTPS –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è Mixed Content
          if (imageUrl.startsWith('http://')) {
            imageUrl = imageUrl.replace('http://', 'https://')
            console.log('üîÑ –ò–∑–º–µ–Ω–µ–Ω –ø—Ä–æ—Ç–æ–∫–æ–ª –Ω–∞ HTTPS:', imageUrl)
          }
          
          // –î–µ–∫–æ–¥–∏—Ä—É–µ–º URL –µ—Å–ª–∏ –æ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç URL-–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
          try {
            imageUrl = decodeURIComponent(imageUrl)
          } catch (e) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å URL:', imageUrl)
          }
          
          console.log('–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', { 
            original: it.image, 
            processed: imageUrl, 
            baseURL: axios.defaults.baseURL,
            fullUrl: imageUrl
          })
          
          return { 
            id: it.id, 
            url: imageUrl, 
            caption: it.caption 
          }
        }))
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', error)
        console.error('–°—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏:', error.response?.status)
        console.error('–î–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏:', error.response?.data)
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤–º–µ—Å—Ç–æ –ø—É—Å—Ç–æ–π –≥–∞–ª–µ—Ä–µ–∏
        setItems([{
          id: 'error',
          url: '',
          caption: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É.'
        }])
      } finally {
        setLoading(false)
      }
    }
    load()
  }, [pageKey])

  const uploadFile = async (file) => {
    try {
      const form = new FormData()
      form.append('page_key', pageKey)
      form.append('image', file)
      
      console.log('–ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª:', file.name, '—Ä–∞–∑–º–µ—Ä:', file.size)
      
      const resp = await axios.post('/gallery-images/', form, { 
        headers: { 'Content-Type': 'multipart/form-data' },
        timeout: 30000 // 30 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
      })
      
      console.log('–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ:', resp.data)
      
      let imageUrl = resp.data.image?.startsWith('http') ? resp.data.image : `${axios.defaults.baseURL?.replace('/api', '')}${resp.data.image}`
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º HTTPS –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è Mixed Content
      if (imageUrl.startsWith('http://')) {
        imageUrl = imageUrl.replace('http://', 'https://')
        console.log('üîÑ –ò–∑–º–µ–Ω–µ–Ω –ø—Ä–æ—Ç–æ–∫–æ–ª –Ω–∞ HTTPS:', imageUrl)
      }
      
      // –î–µ–∫–æ–¥–∏—Ä—É–µ–º URL –µ—Å–ª–∏ –æ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç URL-–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
      try {
        imageUrl = decodeURIComponent(imageUrl)
      } catch (e) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å URL:', imageUrl)
      }
      
      return { 
        id: resp.data.id, 
        url: imageUrl, 
        caption: resp.data.caption 
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:', error)
      console.error('–°—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏:', error.response?.status)
      console.error('–î–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏:', error.response?.data)
      
      throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: ${error.response?.data?.detail || error.message}`)
    }
  }

  const onAdd = async () => {
    if (!isAuthenticated) return
    const input = document.createElement('input')
    input.type = 'file'
    input.accept = 'image/*'
    input.onchange = async () => {
      const file = input.files?.[0]
      if (!file) return
      
      try {
        console.log('–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞:', file.name)
        const uploaded = await uploadFile(file)
        const caption = window.prompt('–ü–æ–¥–ø–∏—Å—å (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)') || ''
        const next = [...items, { ...uploaded, caption }]
        setItems(next)
        
        if (uploaded.id) {
          try {
            await axios.patch(`/gallery-images/${uploaded.id}/`, { caption })
            console.log('–ü–æ–¥–ø–∏—Å—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞')
          } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∏:', error)
          }
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞:', error)
        alert(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: ${error.message}`)
      }
    }
    input.click()
  }

  const onRemove = async (idx) => {
    const target = items[idx]
    const next = items.filter((_, i) => i !== idx)
    setItems(next)
    if (target?.id) {
      await axios.delete(`/gallery-images/${target.id}/`)
    }
  }

  return (
    <div className="gallery card">
      <div className="gallery-header">
        <h3>–ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç</h3>
        {isAuthenticated && (
          <button className="btn" onClick={onAdd} title="–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ">+</button>
        )}
      </div>
      {loading ? (
        <div className="loading" style={{padding:16}}>–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div>
      ) : items.length === 0 ? (
        <div className="muted" style={{padding:16}}>–ü–æ–∫–∞ –Ω–µ—Ç —Ñ–æ—Ç–æ</div>
      ) : items[0]?.id === 'error' ? (
        <div style={{padding:16, backgroundColor:'#fee', border:'1px solid #fcc', borderRadius:'8px', color:'#c33'}}>
          <strong>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</strong><br/>
          {items[0].caption}<br/>
          <small>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.</small>
        </div>
      ) : (
        <div className="gallery-grid">
          {items.map((it, idx) => (
            <div key={idx} className="gallery-card">
              <div className="gallery-image-wrap">
                <img 
                  src={`${it.url}?t=${Date.now()}`}
                  alt={it.caption || `–§–æ—Ç–æ ${idx+1}`}
                  onError={(e) => {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', it.url)
                    console.error('‚ùå –û—à–∏–±–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–∞:', e.target)
                    
                    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
                    if (e.target.dataset.retryAttempted) {
                      console.log('üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —É–∂–µ –±—ã–ª–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º placeholder')
                      e.target.style.display = 'none'
                      const placeholder = document.createElement('div')
                      placeholder.style.cssText = `
                        width: 100%; 
                        height: 100%; 
                        background: #f0f0f0; 
                        display: flex; 
                        align-items: center; 
                        justify-content: center; 
                        color: #666; 
                        font-size: 12px;
                        text-align: center;
                        padding: 10px;
                      `
                      placeholder.textContent = '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ'
                      e.target.parentNode.appendChild(placeholder)
                      return
                    }
                    
                    // –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π URL –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
                    const originalUrl = it.url.split('?')[0]
                    if (e.target.src !== originalUrl) {
                      console.log('üîÑ –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π URL:', originalUrl)
                      e.target.dataset.retryAttempted = 'true'
                      e.target.src = originalUrl
                    } else {
                      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º placeholder –µ—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è
                      e.target.style.display = 'none'
                      const placeholder = document.createElement('div')
                      placeholder.style.cssText = `
                        width: 100%; 
                        height: 100%; 
                        background: #f0f0f0; 
                        display: flex; 
                        align-items: center; 
                        justify-content: center; 
                        color: #666; 
                        font-size: 12px;
                        text-align: center;
                        padding: 10px;
                      `
                      placeholder.textContent = '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ'
                      e.target.parentNode.appendChild(placeholder)
                    }
                  }}
                  onLoad={() => {
                    console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ DOM:', it.url)
                  }}
                  style={{ 
                    width: '100%', 
                    height: '100%', 
                    objectFit: 'cover',
                    display: 'block'
                  }}
                />
                {isAuthenticated && (
                  <button className="gallery-remove" onClick={() => onRemove(idx)} title="–£–¥–∞–ª–∏—Ç—å">√ó</button>
                )}
              </div>
              {it.caption ? <div className="gallery-caption">{it.caption}</div> : null}
            </div>
          ))}
        </div>
      )}
    </div>
  )
}


