version: '3.8'

services:
  # Backend Django сервис
  backend:
    build:
      context: ./afk_back
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    container_name: afk_backend
    ports:
      - "8001:8000"
    volumes:
      - ./afk_back/media:/app/media
      - ./afk_back/db.sqlite3:/app/db.sqlite3
    environment:
      - DEBUG=False
      - ALLOWED_HOSTS=176.109.105.158,localhost,127.0.0.1,afk_backend,176.109.105.158,afkural.ru,www.afkural.ru
      - FRONTEND_URL=http://frontend:80
    restart: unless-stopped
    networks:
      - afk_network

  # Frontend React сервис
  frontend:
    build:
      context: ./afk_front
      dockerfile: Dockerfile
    container_name: afk_frontend
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    restart: unless-stopped
    #environment:
    #  - API_URL=http://backend:8000
    volumes:
      - /srv/afk_front/volumes:/etc/letsencrypt
      - ./afk_back/media:/app/media
    networks:
      - afk_network

  # Nginx для проксирования (опционально)
#  nginx:
#    image: nginx:alpine
#    container_name: afk_nginx
#    ports:
#      - "8080:8080"
#    volumes:
#      - ./nginx/nginx-test.conf:/etc/nginx/conf.d/default.conf
#    depends_on:
#      - backend
#      - frontend
#    restart: unless-stopped
#    networks:
#      - afk_network

networks:
  afk_network:
    driver: bridge

volumes:
  media_data:
  db_data:
